name: Pull Request CI

on:
  push:
    branches-ignore:
      - main

jobs:
  preview:
    runs-on: ubuntu-latest
    env:
      NUXT_SANITY_PROJECT_ID: brvct6ie
      NUXT_SANITY_DATASET: production
      URL: https://leda.fyi
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.17.0
          cache: pnpm
      - name: Run install
        run: pnpm install
      - name: Build production bundle
        run: pnpm build
      - name: Lint files
        run: pnpm lint:ci
      - name: Run tests
        run: pnpm test
      - name: Deploy preview
        id: deploy
        run: |
          echo "URL=$(pnpm run deploy --alias ${{ github.ref_name }} --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_TOKEN }} --message "Deploying branch preview for '${{ github.ref_name }}'" --json | awk '/deploy_url/ {print $2}' | sed 's/\"//g' | sed 's/\,//')" >> $GITHUB_OUTPUT
      - run: echo "Published preview at ${{ steps.deploy.outputs.url }}" >> $GITHUB_STEP_SUMMARY
      - name: Audit the preview URL using Lighthouse
        id: lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: ${{ steps.deploy.outputs.url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
      - name: Job successful feedback
        run: |
          echo '### Lighthouse check :white_check_mark:' >> $GITHUB_STEP_SUMMARY
          echo "Triggered by **${{ github.actor }}** âˆ™ deployed from **${{ github.ref_name }}**" >> $GITHUB_STEP_SUMMARY
          echo ' ' >> $GITHUB_STEP_SUMMARY
          echo "**Results:**" >> $GITHUB_STEP_SUMMARY
          echo "Performance: ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.performance }}" >> $GITHUB_STEP_SUMMARY
          echo "Accessibility: ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.accessibility }}" >> $GITHUB_STEP_SUMMARY
          echo "Best Practices: ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.best-practices }}" >> $GITHUB_STEP_SUMMARY
          echo "SEO: ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.seo }}" >> $GITHUB_STEP_SUMMARY
          echo "PWA: ${{ fromJSON(steps.lighthouse.outputs.manifest)[0].summary.pwa }}" >> $GITHUB_STEP_SUMMARY
